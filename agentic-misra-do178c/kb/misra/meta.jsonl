{"rule_id": "1", "support_status": "supported", "category": "required", "requirement_text": "All  code  shall  conform  to  ISO  9899  standard  C,  with  no  extensions", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "2", "support_status": "not_supported", "category": "advisory", "requirement_text": "Code written in languages other than C should only be used if there is a", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "3", "support_status": "not_supported", "category": "required", "requirement_text": "Assembly language functions that are called from C should be written as", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "4", "support_status": "not_supported", "category": "advisory", "requirement_text": "Provision should be made for appropriate run-time checking.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "5", "support_status": "supported", "category": "required", "requirement_text": "Only those characters and escape sequences which are defined in the", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "6", "support_status": "not_supported", "category": "required", "requirement_text": "Values  of  character  types  shall  be  restricted  to  a  defined  and", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "7", "support_status": "not_supported", "category": "required", "requirement_text": "Trigraphs shall not be used.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "8", "support_status": "supported", "category": "required", "requirement_text": "Multibyte characters and wide string literals shall not be used.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "9", "support_status": "not_supported", "category": "required", "requirement_text": "Comments shall not be nested.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "10", "support_status": "not_supported", "category": "advisory", "requirement_text": "Sections of code should not be 'commented out'.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "11", "support_status": "not_supported", "category": "required", "requirement_text": "Identifiers  (internal  and  external)  shall  not  rely  on  significance  of  more", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "12", "support_status": "supported", "category": "advisory", "requirement_text": "No  identifier  in  one  name  space  shall  have  the  same  spelling  as  an", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "13", "support_status": "supported", "category": "advisory", "requirement_text": "The basic types of char, int, short, long, float and double should not be", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "14", "support_status": "supported", "category": "required", "requirement_text": "The type char shall always be declared as unsigned char or signed char.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "17", "support_status": "supported", "category": "required", "requirement_text": "typedef names shall not be reused.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "18", "support_status": "supported", "category": "advisory", "requirement_text": "Numeric  constants  should  be  suffixed  to  indicate  type,  where  an", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "19", "support_status": "supported", "category": "required", "requirement_text": "Octal constants (other than zero) shall not used.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "20", "support_status": "supported", "category": "required", "requirement_text": "All object and function identifiers shall be declared before use.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "21", "support_status": "supported", "category": "required", "requirement_text": "Identifiers in an inner scope shall not use the same name as an identifier", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "22", "support_status": "supported", "category": "advisory", "requirement_text": "Declarations  of  objects  should  be  at  function  scope  unless  a  wider", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "24", "support_status": "supported", "category": "required", "requirement_text": "Identifiers  shall  not  simultaneously  have  both  internal  and  external", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "25", "support_status": "not_supported", "category": "required", "requirement_text": "An  identifier  with  external  linkage  shall  have  exactly  one  external", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "28", "support_status": "supported", "category": "advisory", "requirement_text": "The register storage class specifier should not be used.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "29", "support_status": "supported", "category": "required", "requirement_text": "The use of a tag shall agree with its declaration.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "30", "support_status": "not_supported", "category": "required", "requirement_text": "All  automatic  variables  shall  have  been  assigned  a  value  before  being", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "31", "support_status": "supported", "category": "required", "requirement_text": "Braces shall be used to indicate and match the structure in the non-zero", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "32", "support_status": "supported", "category": "required", "requirement_text": "In  an  enumerator  list,  the  '='  construct  shall  not  be  used  to  explicitly", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "33", "support_status": "supported", "category": "required", "requirement_text": "The  right  hand  operator  of  a  &&  or  ||  operator  shall  not  contain  side", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "34", "support_status": "supported", "category": "required", "requirement_text": "The operands of a logical && or || shall be primary expressions.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "35", "support_status": "supported", "category": "required", "requirement_text": "Assignment  operators  shall  not  be  used  in  expressions  which  return", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "36", "support_status": "supported", "category": "advisory", "requirement_text": "Logical operators should not be confused with bitwise operators.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "37", "support_status": "supported", "category": "required", "requirement_text": "Bitwise operations shall not be performed on signed integer types.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "38", "support_status": "supported", "category": "required", "requirement_text": "The  right  hand  operand  of  a  shift  operator  shall  lie  between  zero  and", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "39", "support_status": "supported", "category": "required", "requirement_text": "The  unary  minus  operator  shall  not  be  applied  to  an  unsigned", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "40", "support_status": "supported", "category": "advisory", "requirement_text": "The sizeof operator should not be used to expressions that contain side", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "41", "support_status": "not_supported", "category": "advisory", "requirement_text": "The implementation of integer division in the chosen compiler should be", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "42", "support_status": "supported", "category": "required", "requirement_text": "The comma operator shall not be used, except in the control expression", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "43", "support_status": "supported", "category": "required", "requirement_text": "Implicit conversion which may result in a loss of information shall not be", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "44", "support_status": "supported", "category": "advisory", "requirement_text": "Redundant explicit casts should not be used.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "45", "support_status": "supported", "category": "required", "requirement_text": "Type casting from any type to or from pointers shall not be used.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "46", "support_status": "supported", "category": "required", "requirement_text": "The  value  of  an  expression  shall  be  the  same  under  any  order  of", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "47", "support_status": "not_supported", "category": "advisory", "requirement_text": "No  dependence  should  be  placed  on  C's  operator  precedence  rules  in", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "48", "support_status": "supported", "category": "advisory", "requirement_text": "Mixed  precision  arithmetic  should  use  explicit  casting  to  generate  the", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "49", "support_status": "supported", "category": "advisory", "requirement_text": "Tests  of  a  value  against  zero  should  be  made  explicit,  unless  the", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "50", "support_status": "supported", "category": "required", "requirement_text": "Floating-point  variables  shall  not  be  tested  for  exact  equality  or", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "51", "support_status": "supported", "category": "advisory", "requirement_text": "Evaluation of constant unsigned integer expressions should not lead to", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "52", "support_status": "not_supported", "category": "required", "requirement_text": "There shall be no unreachable code.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "53", "support_status": "supported", "category": "required", "requirement_text": "All non-null statements shall have a side-effect.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "54", "support_status": "supported", "category": "required", "requirement_text": "A  null  statement  shall only  occur on  a  line  by  itself,  and shall  not  have", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "55", "support_status": "supported", "category": "advisory", "requirement_text": "Labels should not be used, except in switch statements.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "56", "support_status": "supported", "category": "required", "requirement_text": "The goto statement shall not be used.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "57", "support_status": "supported", "category": "required", "requirement_text": "The continue statement shall not be used.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "58", "support_status": "supported", "category": "required", "requirement_text": "The break statement shall not be used (except to terminate the cases of", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "59", "support_status": "supported", "category": "required", "requirement_text": "The statements forming the body of an if, else if, else, while, do ... while,", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "60", "support_status": "supported", "category": "advisory", "requirement_text": "All if, else if constructs should contain a final else clause.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "61", "support_status": "supported", "category": "required", "requirement_text": "Every non-empty case clause in a switch statement shall be terminated", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "62", "support_status": "supported", "category": "required", "requirement_text": "All switch statements should contain a final default clause.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "63", "support_status": "supported", "category": "advisory", "requirement_text": "A switch expression should not represent a Boolean value.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "64", "support_status": "supported", "category": "required", "requirement_text": "Every switch statements shall have at least one case.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "65", "support_status": "supported", "category": "required", "requirement_text": "Floating-point variables shall not be used as loop counters.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "66", "support_status": "not_supported", "category": "advisory", "requirement_text": "Only expressions concerned with loop control should appear within a for", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "67", "support_status": "not_supported", "category": "advisory", "requirement_text": "Numeric  variables  being  used  within  a  for  loop  for  iteration  counting", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "68", "support_status": "supported", "category": "required", "requirement_text": "Functions shall always be declared at file scope.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "69", "support_status": "supported", "category": "required", "requirement_text": "Functions with variable numbers of arguments shall not be used.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "70", "support_status": "supported", "category": "required", "requirement_text": "Functions shall not call themselves, either directly or indirectly.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "71", "support_status": "supported", "category": "required", "requirement_text": "Functions  shall  always  have  prototype  declarations  and  the  prototype", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "72", "support_status": "supported", "category": "required", "requirement_text": "For  each  function  parameter  the  type  given  in  the  declaration  and", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "73", "support_status": "supported", "category": "required", "requirement_text": "Identifiers  shall  either  be  given  for  all  of  the  parameters  in  a  function", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "74", "support_status": "supported", "category": "required", "requirement_text": "If  identifiers  are  given  for  any  of  the  parameters,  then  the  identifiers", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "75", "support_status": "supported", "category": "required", "requirement_text": "Every function shall have an explicit return type.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "76", "support_status": "supported", "category": "required", "requirement_text": "Function with no parameters shall be declared with parameter type void.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "77", "support_status": "supported", "category": "required", "requirement_text": "The  unqualified  type  of  parameters  passed  to  a  function  shall  be", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "78", "support_status": "supported", "category": "required", "requirement_text": "The number of parameters passed to a function shall match the function", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "79", "support_status": "supported", "category": "required", "requirement_text": "The values returned by void functions shall not be used.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "80", "support_status": "supported", "category": "required", "requirement_text": "Void expression shall not be passed as function parameters.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "81", "support_status": "not_supported", "category": "advisory", "requirement_text": "const  qualification  should  be  used  on  function  parameters  which  are", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "82", "support_status": "supported", "category": "advisory", "requirement_text": "A function should have a single point of exit.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "83", "support_status": "supported", "category": "required", "requirement_text": "For  functions  with  non-void  return  type:  i)  there  shall  be  one  return", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "84", "support_status": "supported", "category": "required", "requirement_text": "For  function  with  void  return  type,  return  statements  shall  not  have  an", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "85", "support_status": "supported", "category": "advisory", "requirement_text": "Function called with no parameters should have empty parentheses.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "86", "support_status": "not_supported", "category": "advisory", "requirement_text": "If a function returns error information, then that error information should", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "87", "support_status": "not_supported", "category": "required", "requirement_text": "#include  statements", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "88", "support_status": "not_supported", "category": "required", "requirement_text": "Non-standard characters shall not occur in header file names in #include", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "88", "support_status": "not_supported", "category": "required", "requirement_text": "The  #include  directive  shall  be  followed  by  either  a  <filename>  or", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "90", "support_status": "not_supported", "category": "required", "requirement_text": "C  macros  shall  only  be  used  for  symbolic  constants,  function-like", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "91", "support_status": "not_supported", "category": "required", "requirement_text": "Macros shall not be #define'd and #undef'd within a block.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "92", "support_status": "not_supported", "category": "advisory", "requirement_text": "A #undef should not be used.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "93", "support_status": "not_supported", "category": "advisory", "requirement_text": "A function should be used in preference to a function-like macro.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "94", "support_status": "not_supported", "category": "required", "requirement_text": "A function-like macro shall not be 'called' without all of its arguments.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "95", "support_status": "not_supported", "category": "required", "requirement_text": "Arguments to a function-like macro shall not contain tokes that look like", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "96", "support_status": "not_supported", "category": "required", "requirement_text": "In  the  definition  of  a  function-like  macro  the  whole  definition,  and  each", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "97", "support_status": "not_supported", "category": "advisory", "requirement_text": "Identifiers in pre-processor directives should be defined before use.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "98", "support_status": "not_supported", "category": "required", "requirement_text": "There  shall  be  at  most  one  occurrence  of  the  #  or  ##  pre-processor", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "99", "support_status": "supported", "category": "required", "requirement_text": "All uses of the #pragma directive shall be documented and explained.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "100", "support_status": "not_supported", "category": "required", "requirement_text": "The defined pre-processor operator shall only be used in one of the two", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "101", "support_status": "supported", "category": "advisory", "requirement_text": "Pointer arithmetic should not be used.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "102", "support_status": "supported", "category": "advisory", "requirement_text": "No more than 2 levels of pointer indirection should be used.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "103", "support_status": "supported", "category": "required", "requirement_text": "Relational operators shall not be applied to pointer types except where", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "104", "support_status": "supported", "category": "required", "requirement_text": "Non-constant pointers to functions shall not be used.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "105", "support_status": "supported", "category": "required", "requirement_text": "All  the  functions  pointed  to  by  a  single  pointer  to  function  shall  be", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "106", "support_status": "supported", "category": "required", "requirement_text": "The address of an object with automatic storage shall not be assigned to", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "107", "support_status": "not_supported", "category": "required", "requirement_text": "The null pointer shall not be de-referenced.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "108", "support_status": "supported", "category": "required", "requirement_text": "In  the  specification  of  structure  or  union  type,  all  members  of  the", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "109", "support_status": "not_supported", "category": "required", "requirement_text": "Overlapping variable storage shall not be used.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "110", "support_status": "supported", "category": "required", "requirement_text": "Unions shall not be used to access the sub-parts of larger data types.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "111", "support_status": "supported", "category": "required", "requirement_text": "Bit fields shall only be defined to be of type unsigned int or signed int.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "112", "support_status": "supported", "category": "required", "requirement_text": "Bit fields of type signed int shall be at least 2 bits long.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "113", "support_status": "supported", "category": "required", "requirement_text": "All the members of a structure (or union) shall be named and shall only", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "114", "support_status": "not_supported", "category": "required", "requirement_text": "Reserved  words  and  standard  library  function  names  shall  not  be", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "115", "support_status": "supported", "category": "required", "requirement_text": "Standard library function names shall not be reused.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "116", "support_status": "not_supported", "category": "required", "requirement_text": "All libraries used in production code shall be written to comply with the", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "117", "support_status": "not_supported", "category": "required", "requirement_text": "The validity of values passed to library functions shall be checked.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "118", "support_status": "supported", "category": "required", "requirement_text": "Dynamic heap memory allocation shall not be used.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "119", "support_status": "supported", "category": "required", "requirement_text": "The error indicator errno shall not be used.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "120", "support_status": "not_supported", "category": "required", "requirement_text": "The macro offsetof, in library <stddef.h>, shall not be used.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "121", "support_status": "supported", "category": "required", "requirement_text": "<locale.h> and the setlocale function shall not be used.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "122", "support_status": "supported", "category": "required", "requirement_text": "The setjmp macro and the longjmp function shall not be used.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "123", "support_status": "supported", "category": "required", "requirement_text": "The signal handling facilities of <signal.h> shall not be used.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "124", "support_status": "supported", "category": "required", "requirement_text": "The input/output library <stdio.h> shall not be used in production code.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "125", "support_status": "supported", "category": "required", "requirement_text": "The library functions atof, atoi, and atol from library <stdlib.h> shall not", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "126", "support_status": "supported", "category": "required", "requirement_text": "The  library  functions  about,  exit,  getenv,  and  system  from  library", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
{"rule_id": "127", "support_status": "supported", "category": "required", "requirement_text": "The time handling functions of library <time.h> shall not be used.", "interpretation": "", "functional_specification": "", "precaution": "", "limitation": "", "source_doc": "local_pdf", "standard": "MISRA-C-2012", "version": "2025-08-15"}
